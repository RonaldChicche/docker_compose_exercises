package flightimporter;

import models.SkyOneAirlinesFlightData
import org.apache.flink.api.common.eventtime.WatermarkStrategy;
import org.apache.flink.connector.kafka.source.KafkaSource;
import org.apache.flink.connector.kafka.source.enumerator.initializer.OffsetsInitializer;
import org.apache.flink.formats.json.JsonDeserializationSchema
import org.apache.flink.sreaming.api.datastream.DataStream
import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;

import java.io.InputStream;
import java.util.Properties;

public class FlightImporterJob {
    public static void main(String[] args) throws Exception {
        // Crear el entorno de ejecución
        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();

        // Configurar el KafkaSource
        KafkaSource<String> source = KafkaSource.<String>builder()
            .setBootstrapServers("localhost:9092") // Cambia esto según tu entorno
            .setTopics("input-topic")
            .setGroupId("my-group")
            .setStartingOffsets(OffsetsInitializer.earliest())
            .setValueOnlyDeserializer(new SimpleStringSchema())
            .build();

        // Conectar la fuente al entorno y procesar los datos
        env.fromSource(source, WatermarkStrategy.noWatermarks(), "Kafka Source")
           .print();

        // Ejecutar el job
        env.execute("Flink Kafka Consumer Example");
    }
}